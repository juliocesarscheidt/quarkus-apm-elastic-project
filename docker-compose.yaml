version: '3.4'

services:
  quarkusapi:
    container_name: quarkusapi
    hostname: quarkusapi
    image: juliocesarmidia/quarkusapi:latest
    build:
      context: ./api
    restart: on-failure
    ports:
      - 8080:8080
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASS: ${MYSQL_PASS}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-quarkus_test}
      ELASTIC_APM_ENABLED: 'true'
      ELASTIC_APM_SERVICE_NAME: 'quarkusapi'
      ELASTIC_APM_APPLICATION_PACKAGES: 'com.github.juliocesarscheidt'
      ELASTIC_APM_SERVER_URL: 'http://apm_server:8200'
      ELASTIC_APM_SERVICE_VERSION: 'v1.0.0'
      ELASTIC_APM_ENVIRONMENT: "development"
    networks:
      - subnet_0

  elasticsearch:
    container_name: elasticsearch
    hostname: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    restart: "on-failure"
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - "node.name=elasticsearch"
      - "cluster.name=es-docker"
      - "bootstrap.memory_lock=true"
      - "ELASTIC_PASSWORD=elasticpasswd"
    networks:
      - subnet_0
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data:rw
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:rw

  kibana:
    container_name: kibana
    hostname: kibana
    image: docker.elastic.co/kibana/kibana:7.7.0
    restart: "on-failure"
    ports:
      - 5601:5601
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks:
      - subnet_0
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:rw

  apm_server:
    container_name: apm_server
    hostname: apm_server
    image: docker.elastic.co/apm/apm-server:7.7.0
    restart: "on-failure"
    ports:
      - 8200:8200
      - 5066:5066
    networks:
      - subnet_0
    volumes:
      - ./apm/apm-server.docker.yml:/usr/share/apm-server/apm-server.yml:rw

  metricbeat:
    container_name: metricbeat
    hostname: metricbeat
    image: docker.elastic.co/beats/metricbeat:7.7.0
    # entrypoint: ["/usr/local/bin/docker-entrypoint"]
    # command: ["setup", "--dashboards", "-environment", "container"]
    # ./metricbeat setup --dashboards -environment container
    restart: "on-failure"
    networks:
      - subnet_0
    volumes:
      - ./metricbeat/metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml:rw
      - ./metricbeat/prometheus.yml:/usr/share/metricbeat/modules.d/prometheus.yml:rw
      - ./metricbeat/elasticsearch.yml:/usr/share/metricbeat/modules.d/elasticsearch.yml:rw

  mysql:
    container_name: mysql
    hostname: mysql
    image: mysql:8.0
    ports:
      - '3306:3306'
      - '33060:33060'
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASS}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-quarkus_test}
      TZ: 'America/Sao_Paulo'
    networks:
      - subnet_0
    restart: on-failure
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:rw

networks:
  subnet_0:
    driver: bridge

volumes:
  elasticsearch-data: {}
  mysql-data: {}

secrets: {}
