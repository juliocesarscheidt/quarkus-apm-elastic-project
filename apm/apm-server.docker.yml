######################### APM Server Configuration #########################

################################ APM Server ################################

apm-server:
  # Defines the host and port the server is listening on. Use "unix:/path/to.sock" to listen on a unix domain socket.
  host: "0.0.0.0:8200"
  #---------------------------- APM Server - RUM Real User Monitoring ----------------------------
  # Enable Real User Monitoring (RUM) Support. By default RUM is disabled.
  # RUM does not support token based authorization. Enabled RUM endpoints will not require any authorization
  # token configured for other endpoints.
  rum:
    enabled: true
    # If a source map has previously been uploaded, source mapping is automatically applied.
    # to all error and transaction documents sent to the RUM endpoint.
    source_mapping:
      # Sourcemapping is enabled by default.
      enabled: true
      timeout: 15s
      elasticsearch:
        hosts: ["http://elasticsearch:9200"]
        #api_key: "id:api_key"
        #username: "elastic"
        #password: "changeme"
      # Index pattern in which to search for source maps, when fetching source maps from Elasticsearch.
      index_pattern: "apm-*"

  #---------------------------- APM Server - Agent Configuration ----------------------------

  # When using APM agent configuration, information fetched from Kibana will be cached in memory for some time.
  # Specify cache key expiration via this setting. Default is 30 seconds.
  #agent.config.cache.expiration: 30s

  kibana:
    # Enabled must be true to enable APM Agent configuration, and for fetching source maps uploaded through Kibana.
    enabled: true
    # Scheme and port can be left out and will be set to the default (`http` and `5601`).
    # In case you specify an additional path, the scheme is required: `http://localhost:5601/path`.
    # IPv6 addresses should always be defined as: `https://[2001:db8::1]:5601`.
    host: "http://kibana:5601"
    # Optional protocol and basic auth credentials.
    #protocol: "https"
    #username: "elastic"
    #password: "changeme"
    # Optional HTTP path.
    #path: ""
    # Enable custom SSL settings. Set to false to ignore custom SSL settings for secure communication.
    #ssl.enabled: true

#================================= General =================================

# Data is buffered in a memory queue before it is published to the configured output.
# The memory queue will present all available events (up to the outputs
# bulk_max_size) to the output, the moment the output is ready to serve
# another batch of events.
#queue:
  # Queue type by name (default 'mem').
  #mem:
    # Max number of events the queue can buffer.
    #events: 4096

    # Hints the minimum number of events stored in the queue,
    # before providing a batch of events to the outputs.
    # The default value is set to 2048.
    # A value of 0 ensures events are immediately available
    # to be sent to the outputs.
    #flush.min_events: 2048

    # Maximum duration after which events are available to the outputs,
    # if the number of events stored in the queue is < `flush.min_events`.
    #flush.timeout: 1s

# Sets the maximum number of CPUs that can be executing simultaneously. The
# default is the number of logical CPUs available in the system.
#max_procs:

#================================ Outputs =================================

# Configure the output to use when sending the data collected by apm-server.

#-------------------------- Elasticsearch output --------------------------
output.elasticsearch:
  # Array of hosts to connect to.
  # Scheme and port can be left out and will be set to the default (`http` and `9200`).
  # In case you specify and additional path, the scheme is required: `http://localhost:9200/path`.
  # IPv6 addresses should always be defined as: `https://[2001:db8::1]:9200`.
  hosts: ["http://elasticsearch:9200"]
  # username: <username>
  # password: <password>
  # Boolean flag to enable or disable the output module.
  #enabled: true
  # Protocol - either `http` (default) or `https`.
  #protocol: "https"
  # Authentication credentials - either API key or username/password.
  #api_key: "id:api_key"
  #username: "elastic"
  #password: "changeme"

#================================= Logging =================================

# There are three options for the log output: syslog, file, and stderr.
# Windows systems default to file output. All other systems default to syslog.

# Sets the minimum log level. The default log level is info.
# Available log levels are: error, warning, info, or debug.
logging.level: debug
#logging.selectors: [ ]
#logging.to_syslog: true

logging.metrics.enabled: true
logging.metrics.period: 30s

logging.to_files: true
# logging.files:
#   path: /var/log/apm-server
#   name: apm-server
#   # Configure log file size limit. If limit is reached, log file will be
#   # automatically rotated.
#   rotateeverybytes: 10485760 # = 10MB
#   # Number of rotated log files to keep. Oldest files will be deleted first.
#   keepfiles: 7
#   # The permissions mask to apply when rotating log files. The default value is 0600.
#   # Must be a valid Unix-style file permissions mask expressed in octal notation.
#   permissions: 0666
#   # Enable log file rotation on time intervals in addition to size-based rotation.
#   # Intervals must be at least 1s. Values of 1m, 1h, 24h, 7*24h, 30*24h, and 365*24h
#   # are boundary-aligned with minutes, hours, days, weeks, months, and years as
#   # reported by the local system clock. All other intervals are calculated from the
#   # Unix epoch. Defaults to disabled.
#   interval: 0

#=============================== HTTP Endpoint ===============================

# apm-server can expose internal metrics through a HTTP endpoint. For security
# reasons the endpoint is disabled by default. This feature is currently experimental.
# Stats can be access through http://localhost:5066/stats. For pretty JSON output
# append ?pretty to the URL.

# Defines if the HTTP endpoint is enabled.
http.enabled: true
# The HTTP endpoint will bind to this hostname or IP address. It is recommended to use only localhost.
http.host: "0.0.0.0"
# Port on which the HTTP endpoint will bind. Default is 5066.
http.port: 5066

#============================= X-pack Monitoring =============================

# Set to true to enable the monitoring reporter.
monitoring.enabled: true

# Most settings from the Elasticsearch output are accepted here as well.
# Note that these settings should be configured to point to your Elasticsearch *monitoring* cluster.
# Any setting that is not set is automatically inherited from the Elasticsearch
# output configuration. This means that if you have the Elasticsearch output configured,
# you can simply uncomment the following line.
#monitoring.elasticsearch:
  # Protocol - either `http` (default) or `https`.
  #protocol: "https"
  # Authentication credentials - either API key or username/password.
  #api_key: "id:api_key"
  #username: "elastic"
  #password: "changeme"
  # Array of hosts to connect to.
  # Scheme and port can be left out and will be set to the default (`http` and `9200`).
  # In case you specify and additional path, the scheme is required: `http://localhost:9200/path`.
  # IPv6 addresses should always be defined as: `https://[2001:db8::1]:9200`.
  #hosts: ["localhost:9200"]
  # The maximum number of events to bulk in a single Elasticsearch bulk API index request.
  # The default is 50.
  #bulk_max_size: 50
  # The maximum number of seconds to wait before attempting to connect to
  # Elasticsearch after a network error. The default is 60s.
  #backoff.max: 60s
  # Configure HTTP request timeout before failing an request to Elasticsearch.
  #timeout: 90
